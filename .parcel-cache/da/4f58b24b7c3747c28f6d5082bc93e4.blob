{"mappings":"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H,OAAO0H,MAAM3E;EAC1B/C,OAAOS;MACHgH,UAAUA,OAAOlH;IACnBkH,OAAOlH,IAAIC,OAAOR,OAAOS;;MAGvBgH,UAAUA,OAAOlH,OAAOkH,OAAOlH,IAAII,kBAAkB0C;IACvDoE,OAAOlH,IAAII,kBAAkBgC,QAAQ,UAASkF;MAC5CA,GAAG7H,OAAOS;;;SAIPT,OAAO0H,MAAM3E;EACpB/C,OAAO+C;EAEP0E,SAASzH,OAAO0H,MAAM3E;MAClB0E,UAAUA,OAAOlH,OAAOkH,OAAOlH,IAAIG,iBAAiB2C;IACtDoE,OAAOlH,IAAIG,iBAAiBiC,QAAQ,UAASkF;UACvCC,qBAAqBD,GAAG;eACnBhC,WAAW9F,OAAOC,OAAO8C,MAAMC;;UAEpC+E,sBAAsB3G,eAAekC;QACvClC,eAAeL,KAAKiH,MAAM5G,gBAAgB2G;;;;EAIhD5G,eAAe6B,MAAM;;;;mBC7WP;;;sBACA;;AAEhBE,QAAQ6B;oBAEJkD,kCAAeC,MAAM;;;ACLzB;sBAE6B;EAC3BlI,OAAOmI,UAAUC,QAAQ;;EAEzBpI,OAAOmI,UAAUC,QAAQ;;;;ACL3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1EA;sBAE6B;EAC3BpI,OAAOmI,UAAUC,QAAQ;;EAEzBpI,OAAOmI,UAAUC,QAAQ;;;;ACL3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC//FA;sBAE6B;EAC3BpI,OAAOmI,UAAUC,QAAQ;;EAEzBpI,OAAOmkJA;sBAE6B;EAC3BpI,OAAOmI,UAAUC,QAAQ;;EAEzBpI,OAAOmI,UAAUC,QAAQ;;;;ACL3B;;AAEAC,OAAOC,eAAeH,SAAS;EAAgBI,OAAO;;;;;;;;;AAStD,iBAAiBC,KAAKC;QACZtD,MAAMkD,OAAOK,OAAO;QACpBC,OAAOH,IAAIjC,MAAM;WACdlD,IAAI,GAAGA,IAAIsF,KAAKrF,QAAQD;IAC7B8B,IAAIwD,KAAKtF,MAAM;;SAEZoF,mBAAmB,AAAAG,SAASzD,IAAIyD,IAAIC,iBAAiB,AAAAD,SAASzD,IAAIyD;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","sources":[".yarn/cache/@parcel-runtime-browser-hmr-npm-2.0.0-nightly.645-e6d26b1e4e-714d9d85b4.zip/node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/index.js",".yarn/cache/vue-npm-3.0.11-3ea2c8d19e-b71201f33a.zip/node_modules/vue/index.js",".yarn/cache/vue-npm-3.0.11-3ea2c8d19e-b71201f33a.zip/node_modules/vue/dist/vue.cjs.js",".yarn/cache/@vue-compiler-dom-npm-3.0.11-28430022e5-b339f84219.zip/node_modules/@vue/compiler-dom/index.js",".yarn/cache/@vue-compiler-dom-npm-3.0.11-28430022e5-b339f84219.zip/node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js",".yarn/cache/@vue-compiler-core-npm-3.0.11-bd2961b121-63486155b7.zip/node_modules/@vue/compiler-core/index.js",".yarn/cache/@vue-compiler-core-npm-3.0.11-bd2961b121-63486155b7.zip/node_modules/@vue/compiler-core/dist/compiler-core.cjs.js",".yarn/cache/@vue-shared-npm-3.0.11-39ac95b007-2256b025c7.zip/node_modules/@vue/shared/index.js",".yarn/cache/@vue-shared-npm-3.0.11-39ac95b007-2256b025c7.zip/node_modules/@vue/shared/dist/shared.cjs.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/source-map.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/source-map-generator.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/base64-vlq.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/base64.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/util.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/array-set.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/mapping-list.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/source-map-consumer.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/binary-search.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/quick-sort.js",".yarn/cache/source-map-npm-0.6.1-1a3621db16-8647829a06.zip/node_modules/source-map/lib/source-node.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/tokenizer/types.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/util/whitespace.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/util/location.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/base.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/comments.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/error-message.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/error.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugins/estree.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/tokenizer/context.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/util/identifier.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/util/scopeflags.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/util/scope.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugins/flow/scope.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugins/flow/index.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugins/jsx/xhtml.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugins/jsx/index.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugins/typescript/scope.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/util/production-parameter.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugins/typescript/index.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugins/placeholders.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugins/v8intrinsic.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/plugin-utils.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/options.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/tokenizer/state.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/tokenizer/index.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/util/class-scope.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/util/expression-scope.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/util.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/node.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/lval.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/expression.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/statement.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/parser/index.js",".yarn/cache/@babel-parser-npm-7.13.16-a424e995a5-4f02b22668.zip/node_modules/@babel/parser/src/index.js",".yarn/cache/estree-walker-npm-2.0.2-dfab42f65c-378cc9d3be.zip/node_modules/estree-walker/dist/umd/estree-walker.js",".yarn/cache/@vue-runtime-dom-npm-3.0.11-df106c2f7b-ccfe511fae.zip/node_modules/@vue/runtime-dom/index.js",".yarn/cache/@vue-runtime-dom-npm-3.0.11-df106c2f7b-ccfe511fae.zip/node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.js",".yarn/cache/@vue-runtime-core-npm-3.0.11-0544508fff-fc31a8e124.zip/node_modules/@vue/runtime-core/index.js",".yarn/cache/@vue-runtime-core-npm-3.0.11-0544508fff-fc31a8e124.zip/node_modules/@vue/runtime-core/dist/runtime-core.cjs.js",".yarn/cache/@vue-reactivity-npm-3.0.11-5fd503c331-eff8397c2d.zip/node_modules/@vue/reactivity/index.js",".yarn/cache/@vue-reactivity-npm-3.0.11-5fd503c331-eff8397c2d.zip/node_modules/@vue/reactivity/dist/reactivity.cjs.js","./src/App.vue",".yarn/cache/@parcel-transformer-js-npm-2.0.0-nightly.645-749f42c11a-a845c33cb7.zip/node_modules/@parcel/transformer-js/lib/esmodule-helpers.js"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString:\n    \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString:\n    'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys:\n    'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate:\n    \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn:\n    \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\nexport type ParsingError = SyntaxError & ErrorContext;\n\nexport { ErrorMessages as Errors } from \"./error-message\";\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  /**\n   * Raise a parsing error on given position pos. If errorRecovery is true,\n   * it will first search current errors and overwrite the error thrown on the exact\n   * position before with the new error message. If errorRecovery is false, it\n   * fallbacks to `raise`.\n   *\n   * @param {number} pos\n   * @param {string} errorTemplate\n   * @param {...any} params\n   * @returns {(Error | empty)}\n   * @memberof ParserError\n   */\n  raiseOverwrite(\n    pos: number,\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n        if (error.pos === pos) {\n          return Object.assign(error, { message });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n    return this._raise({ loc, pos }, message);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Record the expression value as in estree mode we want\n      // the stmt to have the real value e.g. (\"use strict\") and\n      // not the raw value e.g. (\"use\\\\x20strict\")\n      this.addExtra(directive.value, \"expressionValue\", value);\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt.decimal:\n          return this.estreeParseDecimalLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseMaybePrivateName(...args: [boolean]): any {\n      const node = super.parseMaybePrivateName(...args);\n      if (\n        node.type === \"PrivateName\" &&\n        this.getPluginOption(\"estree\", \"classFeatures\")\n      ) {\n        return this.convertPrivateNameToPrivateIdentifier(node);\n      }\n      return node;\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n        propertyNode.computed = false;\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      this.state.value === \"of\" &&\n      !this.state.exprAllowed &&\n      prevType !== tt._function &&\n      prevType !== tt._class\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(prevType === tt._return && this.hasPrecedingLineBreak()) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\ntt.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true; /* tt.braceHashL.beforeExpr */\n};\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: string[] = [];\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.includes(name) &&\n        (scope.lexical.includes(name) || scope.functions.includes(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../../parser\";\nimport { types as tt, type TokenType } from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors } from \"../../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              node.value.this.start,\n              FlowErrors.ThisParamBannedInConstructor,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.value.this.start,\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n        );\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // determine whether a parameter is a this param\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n/* eslint-disable sort-keys */\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              const htmlEntity =\n                ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\";\n              const char = this.input[this.state.pos];\n              this.raise(\n                this.state.pos,\n                `Unexpected token \\`${char}\\`. Did you mean \\`${htmlEntity}\\` or \\`{'${char}'}\\`?`,\n              );\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | N.Accessibility;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = Object.freeze({\n  AbstractMethodHasImplementation:\n    \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.hash) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers(\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      errorTemplate?: string,\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n          } else {\n            modified.accessibility = modifier;\n          }\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(\n            startPos,\n            // $FlowIgnore\n            errorTemplate,\n            modifier,\n          );\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        if (readonly) {\n          this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        node,\n        [\"readonly\"],\n        [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"],\n        TSErrors.InvalidModifierOnTypeMember,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return this.isContextual(\"abstract\") && this.lookahead().type === tt._new;\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript interface declaration\",\n        BIND_TS_INTERFACE,\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInDeclareContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || this.match(tt.name))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (this.match(tt.name)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers !== undefined) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n        if (allowModifiers === false && (accessibility || readonly)) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              if (state.optionalChainMember) {\n                // $FlowIgnore\n                node.optional = false;\n              }\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\") &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(\"type\") &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      this.tsParseModifiers(member, [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n      ]);\n\n      const callParseClassMember = () => {\n        super.parseClassMember(classBody, member, state);\n      };\n      if (member.declare) {\n        this.tsInDeclareContext(callParseClassMember);\n      } else {\n        callParseClassMember();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      if (\n        isDeclare &&\n        (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          this.state.start,\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n        );\n      }\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isDeclareContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n\n      // $FlowIgnore\n      if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n        this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isDeclareContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"ParenthesizedExpression\":\n          return this.toAssignableParenthesizedExpression(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean) {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (\n            /*bindingType*/ !args[0] &&\n            contextDescription !== \"parenthesized expression\" &&\n            !expr.extra?.parenthesized\n          ) {\n            this.raise(expr.start, Errors.InvalidLhs, contextDescription);\n            break;\n          }\n          this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n          return;\n        case \"TSNonNullExpression\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close) {\n      if (\n        this.state.isDeclareContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n      } else {\n        super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInDeclareContext<T>(cb: () => T): T {\n      const oldIsDeclareContext = this.state.isDeclareContext;\n      this.state.isDeclareContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isDeclareContext = oldIsDeclareContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | typeof undefined {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(\"interface\")) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(\n            node.start,\n            TSErrors.NonClassMethodPropertyHasAbstractModifer,\n          );\n          this.next();\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(\n            method.start,\n            TSErrors.AbstractMethodHasImplementation,\n            key.type === \"Identifier\"\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n          );\n        }\n      }\n      return method;\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and moduleAttributes plugins.\",\n      );\n    }\n    const moduleAttributesVerionPluginOption = getPluginOption(\n      plugins,\n      \"moduleAttributes\",\n      \"version\",\n    );\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\n        \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n          \" representing the last proposal update. Currently, the\" +\n          \" only supported value is 'may-2020'.\",\n      );\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\nimport type { ParsingError } from \"../parser/error\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: ParsingError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n  isDeclareContext: boolean = false;\n  inAbstractClass: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, string> = new Map();\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: string) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\ntype raiseFunction = (number, string, ...any) => void;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ string> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, message: string) {\n    this.errors.set(pos, message);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (message: string, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {string} message Error message\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, message);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {string} message\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(pos: number, message: string): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {string} message\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((message, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, message);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport { Errors } from \"./error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.end, this.nextTokenStart()),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(this.state.lastTokEnd, Errors.MissingSemicolon);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, message);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/proposal-class-fields/#sec-private-names-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors } from \"./error\";\n\n/*::\nimport type { SourceType } from \"../options\";\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        // If we have [Yield] production, `yield` will start a YieldExpression thus\n        // regex is allowed following. Otherwise `yield` is an identifier and regex\n        // is disallowed in tt.name.updateContext\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(\n        node.argument.start,\n        Errors.UnexpectedTokenUnaryExponentiation,\n      );\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    if (\n      this.isContextual(\"module\") &&\n      this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n      !this.hasFollowingLineBreak()\n    ) {\n      return this.parseModuleExpression();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? this.state.type.startsExpr\n        : this.state.type.startsExpr && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(\n          startPos,\n          this.hasPlugin(\"topLevelAwait\")\n            ? Errors.AwaitNotInAsyncContext\n            : Errors.AwaitNotInAsyncFunction,\n        );\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed\n      ? this.parseExpression()\n      : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(\n        this.getPrivateNameSV(property),\n        property.start,\n      );\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        state.maybeAsyncArrow,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        // todo(Babel 8): remove the if condition,\n        // moduleAttributes is renamed to importAssertions\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            const last = this.state.context.length - 1;\n            if (this.state.context[last] !== ct.functionStatement) {\n              // Since \"async\" is an identifier and normally identifiers\n              // can't be followed by expression, the tokenizer assumes\n              // that \"function\" starts a statement.\n              // Fixing it in the tokenizer would mean tracking not only the\n              // previous token (\"async\"), but also the one before to know\n              // its beforeExpr value.\n              // It's easier and more efficient to adjust the context here.\n              throw new Error(\"Internal error\");\n            }\n            this.state.context[last] = ct.functionExpression;\n\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            return this.parseAsyncArrowUnaryFunction(id);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo();\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const nextCh = this.input.codePointAt(this.state.end);\n        if (isIdentifierStart(nextCh) || nextCh === charCodes.backslash) {\n          const start = this.state.start;\n          // $FlowIgnore It'll either parse a PrivateName or throw.\n          node = (this.parseMaybePrivateName(true): N.PrivateName);\n          if (this.match(tt._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(\n              this.getPrivateNameSV(node),\n              node.start,\n            );\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(\n              this.state.start,\n              Errors.PrivateInExpectedIn,\n              this.getPrivateNameSV(node),\n            );\n          } else {\n            throw this.unexpected(start);\n          }\n          return node;\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  parseDo(): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(metaProp.start, error);\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    // The tokenizer uses `braceIsBlock` to detect whether `{` starts a block statement.\n    // If `{` is a block statement, `exprAllowed` will be `true`.\n    // However the tokenizer can not handle edge cases like `0 ? a : { a : 1 } / 2`, here\n    // we update `exprAllowed` when an object-like is parsed.\n    this.state.exprAllowed = false;\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) ||\n        this.match(tt.string) ||\n        this.match(tt.bigint) ||\n        this.match(tt.decimal)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const curContext = this.curContext();\n      if (\n        (type === tt._class || type === tt._function) &&\n        (curContext === ct.functionStatement ||\n          curContext === ct.functionExpression)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsInClass);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    return (\n      this.hasPrecedingLineBreak() ||\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      this.match(tt.plusMin) ||\n      this.match(tt.parenL) ||\n      this.match(tt.bracketL) ||\n      this.match(tt.backQuote) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      this.match(tt.regexp) ||\n      this.match(tt.slash) ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n    if (isForOf || this.match(tt._in)) {\n      if (isForOf && startsWithLet) {\n        this.raise(init.start, Errors.ForOfLet);\n      }\n      this.toAssignable(init, /* isLHS */ true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (\n      this.isPrivateName(key) &&\n      this.getPrivateNameSV(key) === \"constructor\"\n    ) {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation || this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type === \"StringLiteral\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    }\n    // todo(Babel 8): remove module attributes support\n    else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      if (this.match(tt.string)) {\n        node.key = this.parseLiteral<N.StringLiteral>(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (keyName !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          keyName,\n        );\n      }\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n",null,null,null,null,null,null,null,"<template>\n  <div>Hello World!</div>\n</template>\n",null],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","createApp","mount","exports","require","Object","defineProperty","value","str","expectsLowerCase","create","list","val","toLowerCase","PatchFlagNames","slotFlagsText","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","makeMap","range","source","start","end","lines","count","res","j","line","repeat","Math","max","String","lineLength","pad","min","specialBooleanAttrs","isSpecialBooleanAttr","isBooleanAttr","unsafeAttrCharRE","attrValidationCache","name","hasOwnProperty","isUnsafe","propsToAttrMap","acceptCharset","className","htmlFor","httpEquiv","isNoUnitNumericStyleProp","isKnownAttr","item","normalized","normalizeStyle","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","tmp","trim","styles","normalizedKey","startsWith","hyphenate","normalizeClass","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","escapeRE","string","match","exec","escaped","index","lastIndex","charCodeAt","substring","commentStripRE","src","replace","a","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","looseCompareArrays","aKeysCount","keys","bKeysCount","aHasKey","bHasKey","arr","findIndex","toDisplayString","stringify","replacer","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","babelParserDefaultPlugins","EMPTY_OBJ","freeze","EMPTY_ARR","NOOP","NO","onRE","isOn","isModelListener","extend","assign","el","splice","prototype","hasOwn","toTypeString","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","hit","camelizeRE","camelize","_","c","toUpperCase","hyphenateRE","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","global","escapeHtml","escapeHtmlComment","generateCodeFrame","isSSRSafeAttrName","looseIndexOf","stringifyStyle","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","options","token","set","createBinop","types","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","code","skipWhiteSpace","isWhitespace","Position","col","column","SourceLocation","filename","identifierName","getLineInfo","input","offset","lineStart","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","last","CommentsParser","addComment","comment","loc","state","trailingComments","leadingComments","adjustCommentsAfterTrailingComma","node","elements","takeAllComments","lastElement","commentPreviousNode","newTrailingComments","leadingComment","processComment","commentStack","firstChild","lastChild","lastInStack","pop","properties","arguments","innerComments","firstTrailingCommentIndex","ErrorMessages","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","errorTemplate","params","raiseWithData","raiseOverwrite","errorRecovery","errors","_raise","errorContext","err","SyntaxError","isLookahead","superClass","estreeParseRegExpLiteral","pattern","flags","regex","estreeParseLiteral","estreeParseBigIntLiteral","bigInt","BigInt","estreeParseDecimalLiteral","parseLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","isValidDirective","parenthesized","stmtToDirective","addExtra","parseBlockBody","args","directiveStatements","directives","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseExprAtom","refExpressionErrors","tt","parseMaybePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","startPos","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","toAssignable","isLHS","toAssignableObjectExpressionProp","Errors","finishCallExpression","optional","callee","toReferencedArguments","parseExport","exported","specifiers","parseSubscript","base","noCalls","optionalChainMember","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","exprAllowed","out","curContext","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","current","next","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","inClass","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","getScopeHandler","shouldParseTypes","shouldParseEnums","finishToken","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","this","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","bodyNode","parseImport","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","createIdentifier","flowParsePostfixType","canInsertSemicolon","elementType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","refNeedsArrowPos","result","tryParse","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","getTokenFromCode","finishOp","readWord","isBinding","element","operator","exprList","trailingCommaPos","toReferencedList","isParenthesizedExpr","parseArrayLike","close","canBePattern","isTuple","maybeInArrowParameters","checkLVal","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","contextDescription","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","parseBooleanLiteral","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","add","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","jsxReadString","quote","entity","substr","fromCodePoint","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","attributes","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","inPropertyName","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","modifier","tsIsIdentifier","tsNextTokenCanFollowModifier","isLiteralPropertyName","tsParseModifier","allowedModifiers","tsTryParse","bind","tsParseModifiers","modified","disallowedModifiers","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","lookaheadCharCode","parseMaybeUnary","tsParseArrayTypeOrHigher","objectType","indexType","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","hasFollowingLineBreak","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","parseAccessModifier","elt","pp","parameter","bodilessType","isDeclareContext","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","parseStatementContent","callParseClassMember","parseClassMemberWithIsStatic","inAbstractClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","typeCast","ct","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","checkCommaAfterRest","readToken_lt_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsDeclareContext","oldInAbstractClass","hasBody","placeholder","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","moduleAttributesVerionPluginOption","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","skip","setStrict","skipSpace","codePointAt","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","content","mods","char","charCode","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","octal","readWord1","escStart","identifierCheck","esc","keywordTypes","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","declarePrivateName","classScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","usePrivateName","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","recordParenthesizedIdentifierError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","expectOnePlugin","names","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","initializeScopes","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","oldProdParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","ExpressionErrors","Node","parser","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","isLast","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseSpread","parseRestBinding","parseObjectLike","closeCharCode","allowEmpty","elts","parseDecorator","checkClashes","disallowLetBinding","strictModeChanged","elem","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","getExpression","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","parseModuleExpression","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","lookaheadCh","isPrivate","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","oldInPropertyName","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","reservedTest","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","revertScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","isLetKeyword","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","isForOf","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","constructorAllowsSuper","hadConstructor","parseClassStaticBlock","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","exportedName","nodes","surrogate","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList","factory","define","amd","estreeWalker","should_skip","should_remove","replacement","WalkerBase","leave","visit","_should_skip","_should_remove","_replacement","skipped","removed","instance","SyncWalker","AsyncWalker","asyncWalk","walk","reactivity","shared","vnode","msg","pauseTracking","component","appWarnHandler","appContext","config","warnHandler","trace","getComponentTrace","callWithErrorHandling","proxy","formatComponentName","warnArgs","formatTrace","resetTracking","currentVNode","normalizedStack","recurseCount","parentInstance","logs","entry","formatTraceEntry","isRoot","open","props","formatProps","formatProp","isRef","toRaw","ErrorTypeStrings","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","info","pushWarningContext","popWarningContext","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","RECURSION_LIMIT","job","jobId","getId","middle","middleJobId","allowRecurse","findInsertionIndex","queueFlush","flushJobs","activeQueue","pendingQueue","queueCb","seen","parentJob","checkRecursiveUpdates","flushPreFlushCbs","deduped","sort","flushPostFlushCbs","isHmrUpdating","hmrDirtyComponents","globalObject","__VUE_HMR_RUNTIME__","createRecord","tryWrap","rerender","__hmrId","record","instances","isClassComponent","__vccOpts","newRender","render","renderCache","newComp","queuePostFlushCb","queueJob","hook","devtools","app","version","emit","Fragment","Text","Comment","Static","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","uid","rawArgs","emitsOptions","propsOptions","validator","isValid","modelArg","modifiersKey","number","devtoolsComponentEmit","lowerCaseEvent","handlerName","onceHandler","emitted","comp","asMixin","deopt","__emits","emits","hasExtends","extendEmits","normalizedFromExtend","normalizeEmitsOptions","isRenderingCompiledSlot","setCompiledSlotRendering","slots","fallback","noSlotted","slot","openBlock","validSlotContent","ensureValidVNode","rendered","createBlock","scopeId","slotScopeIds","vnodes","child","isVNode","currentRenderingInstance","currentScopeId","__scopeId","withScopeId","_id","withCtx","ctx","renderFnWithContext","prevInstance","setCurrentRenderingInstance","closeBlock","_c","accessedAttrs","Component","withProxy","setupState","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","markAttrsAccessed","getFunctionalFallthrough","setRoot","patchFlag","getChildRoot","inheritAttrs","filterModelListeners","cloneVNode","allAttrs","eventAttrs","extraAttrs","dirs","isElementRoot","transition","blockStack","createVNode","rawChildren","dynamicChildren","childRoot","filterSingleRoot","dynamicIndex","updatedRoot","singleRoot","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","hasPropsChanged","dynamicProps","isEmitListener","$stable","nextKeys","subTree","isSuspense","__isSuspense","SuspenseImpl","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","rendererInternals","mountSuspense","patchSuspense","hydrate","hydrateSuspense","createSuspenseBoundary","Suspense","patch","o","hiddenContainer","suspense","pendingBranch","ssContent","ssFallback","setActiveBranch","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","effects","onPending","timeout","hasWarned","m","move","isUnmounted","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","onResolve","fallbackVNode","onFallback","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","updateHOCHostEl","doRemove","hydrateNode","normalizeSuspenseSlot","s","singleChild","branch","rawProps","isStateful","isSSR","InternalObjectKey","propsDefaults","setFullProps","validateProps","shallowReactive","rawPrevProps","rawCurrentProps","propsToUpdate","camelizedKey","resolvePropValue","kebabKey","trigger","needCastKeys","camelKey","opt","defaultValue","setCurrentInstance","__props","extendProps","normalizePropsOptions","validatePropName","booleanIndex","getTypeIndex","Boolean","stringIndex","ctor","getType","expectedTypes","isSameType","resolvedValues","validateProp","isAbsent","required","assertType","getInvalidTypeMessage","isSimpleType","receivedType","expectedValue","styleValue","receivedValue","isExplicable","isBoolean","explicitTypes","target","currentInstance","prepend","hooks","wrappedHook","__weh","unshift","apiName","createHook","lifecycle","isInSSRComponentSetup","injectHook","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","effect","doWatch","INITIAL_WATCHER_VALUE","immediate","deep","flush","onTrack","onTrigger","warnInvalidSource","getter","forceTrigger","_shallow","isReactive","traverse","cleanup","onInvalidate","baseGetter","runner","onStop","active","newValue","scheduler","queuePostRenderEffect","isMounted","queuePreFlushCb","lazy","recordInstanceBoundEffect","publicThis","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","useTransitionState","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","beforeEnter","leavingVNode","afterHook","cancelHook","called","done","_enterCb","cancelled","isKeepAlive","keepComment","keyedFragmentCount","__isKeepAlive","KeepAliveImpl","include","exclude","sharedContext","renderer","_unmount","storageContainer","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","resetShapeFlag","getComponentName","pruneCacheEntry","watch","pruneCache","pendingCacheKey","cacheSubtree","getInnerChild","rawVNode","cachedVNode","KeepAlive","registerKeepAliveHook","__wdc","injectToKeepAliveRoot","keepAliveRoot","injected","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","isBuiltInDirective","internalInstance","bindings","dir","modifiers","mounted","updated","oldBindings","binding","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","components","provides","rootComponent","rootProps","createAppContext","installedPlugins","_uid","_component","_props","_container","_context","use","install","mixin","validateComponentName","validateDirectiveName","rootContainer","isHydrate","__vue_app__","devtoolsInitApp","devtoolsUnmountApp","provide","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","mt","mountComponent","patchProp","insert","createComment","hasChildNodes","isFragmentStart","onMismatch","handleMismatch","ref","domType","nextNode","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","hydrateChildren","setRef","invokeDirectiveHook","onClick","vnodeHooks","onVnodeBeforeMount","queueEffectWithSuspense","textContent","parentVNode","fragmentSlotScopeIds","supported","perf","isSupported","mark","startTag","endTag","measure","clearMarks","isAsyncWrapper","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","pendingRequest","resolvedComp","retries","retry","load","thisRequest","reject","userRetry","userFail","__esModule","Symbol","toStringTag","defineComponent","createInnerComp","loaded","delayed","rtc","rtg","rawRef","oldRawRef","r","exposed","owner","oldRef","refs","doSet","baseCreateRenderer","createHydrationFunctions","createHydrationFns","__VUE__","setDevtoolsHook","__VUE_DEVTOOLS_GLOBAL_HOOK__","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","patchStaticNode","processFragment","processElement","processComponent","internals","removeStaticNode","moveStaticNode","mountElement","patchElement","is","mountChildren","unmountChildren","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","areChildrenSVG","patchBlockChildren","traverseStaticChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","updateComponent","initialVNode","createComponentInstance","registerHMR","startMeasure","setupComponent","endMeasure","shouldUpdateComponent","updateComponentPreRender","invalidateJob","bm","renderComponentRoot","scopedInitialVNode","bu","u","originNext","nextTree","prevTree","createDevEffectOptions","updateProps","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","moveType","needTransition","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","unregisterHMR","bum","_vnode","mc","pc","pbc","createAppAPI","shallow","ch1","arrI","isTeleport","__isTeleport","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","to","TeleportImpl","querySelector","mainAnchor","targetAnchor","wasDisabled","currentContainer","currentAnchor","moveTeleport","nextTarget","hydrateTeleport","isReorder","targetNode","_lpa","Teleport","COMPONENTS","DIRECTIVES","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","registry","currentBlock","disableTracking","shouldTrack","__v_isVNode","vnodeArgsTransformer","transformer","createVNodeWithArgsTransform","_createVNode","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","isProxy","klass","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","mergeProps","deepCloneVNode","flag","numberOfNodes","asBlock","slotFlag","createTextVNode","toMerge","existing","incoming","parentProvides","treatDefaultAsFactory","shouldCacheAccess","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","inject","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","applyOptions","checkDuplicateProperties","createDuplicateChecker","methodHandler","writable","dataFn","resolveData","rawData","createWatcher","Reflect","ownKeys","onActivated","onDeactivated","proxyRefs","toRef","callHookWithMixinAndExtends","selfHook","reactive","createPathGetter","path","segments","__merged","mergeOptions","strats","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","shallowReadonly","$attrs","$slots","$refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","track","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","createRenderContext","isBuiltInTag","appIsNativeTag","initProps","setupResult","setupStatefulComponent","Proxy","exposePropsOnRenderContext","createSetupContext","resolvedResult","finishComponentSetup","__ssrInlineRender","ssrRender","devtoolsRawSetupState","exposeSetupStateOnRenderContext","compile","isRuntimeOnly","_compile","delimiters","_rc","attrHandlers","deleteProperty","classifyRE","classify","displayName","__file","inferFromRegistry","getterOrOptions","propsOrChildren","ssrContextKey","useSSRContext","vueStyle","numberStyle","stringStyle","keywordStyle","formatter","header","__isVue","genRefFlag","formatValue","isReadonly","formatInstance","blocks","createInstanceBlock","extractKeys","asRaw","Comp","extracted","isKeyOfType","devtoolsFormatters","renderItem","isInteger","dynamicSlots","_ssrUtils","ssrUtils","customRef","markRaw","shallowRef","toRefs","triggerRef","unref","createCommentVNode","createHydrationRenderer","createRenderer","createSlots","createStaticVNode","defineAsyncComponent","defineEmit","defineProps","h","initCustomFormatter","popScopeId","pushScopeId","registerRuntimeCompiler","renderList","renderSlot","resolveComponent","resolveDirective","resolveDynamicComponent","setBlockTracking","toHandlers","transformVNodeArgs","useContext","watchEffect","withDirectives","script","initialize","_cache"],"version":3,"file":"index.HASH_REF_0fa2489aa94c8731ee2aee9f3fafb3e2.js.map","sourceRoot":"/__parcel_source_root/"}